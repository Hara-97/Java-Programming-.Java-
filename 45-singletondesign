// 45.	Implement a singleton design pattern for a Logger class, ensuring only one instance of the class can be created
class Logger {
    // Only one instance (static)
    private static Logger instance = new Logger();

    // Private constructor
    private Logger() {
        System.out.println("Logger created.");
    }

    // Public method to get the instance
    public static Logger getInstance() {
        return instance;
    }

    // Simple log method
    public void log(String message) {
        System.out.println("Log: " + message);
    }
}

public class Main {
    public static void main(String[] args) {
        Logger logger1 = Logger.getInstance();
        logger1.log("Hello from logger 1");

        Logger logger2 = Logger.getInstance();
        logger2.log("Hello from logger 2");

        System.out.println(logger1 == logger2); // true
    }
}
